-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-01-15 09:13:24 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE agent (
    ida       INTEGER NOT NULL,
    jmbg_a    NUMBER(13) NOT NULL,
    ime_a     VARCHAR2(32 CHAR) NOT NULL,
    prz_a     VARCHAR2(32 CHAR) NOT NULL,
    dat_rodj  DATE NOT NULL,
    str_sprem VARCHAR2(32) NOT NULL,
    br_tel_a  INTEGER,
    br_lic    INTEGER NOT NULL,
    ida_nad   INTEGER,
    plt       NUMBER(10, 2)
);

ALTER TABLE agent
    ADD CHECK ( str_sprem IN ( 'DOKTOR', 'MAGISTAR', 'SSS', 'SSŠ', 'VKV',
                               'VSS', 'VŠS' ) );

ALTER TABLE agent ADD CONSTRAINT chk_plt CHECK ( plt >= 30000 );

ALTER TABLE agent ADD CONSTRAINT agent_pk PRIMARY KEY ( ida );

ALTER TABLE agent ADD CONSTRAINT agent_jmbg_a_un UNIQUE ( jmbg_a );

ALTER TABLE agent ADD CONSTRAINT agent_br_lic_un UNIQUE ( br_lic );

CREATE TABLE bazen (
    idb      INTEGER NOT NULL,
    dubina   NUMBER(5, 2) NOT NULL,
    povrsina NUMBER(6, 2) NOT NULL,
    tip_baz  VARCHAR2(32) NOT NULL,
    idn      INTEGER NOT NULL
);

ALTER TABLE bazen ADD CONSTRAINT chk_dubina CHECK ( dubina > 0 );

ALTER TABLE bazen ADD CONSTRAINT chk_povrsina CHECK ( povrsina > 0 );

ALTER TABLE bazen
    ADD CHECK ( tip_baz IN ( 'Kopani', 'Montazni', 'Termalni' ) );

ALTER TABLE bazen ADD CONSTRAINT bazen_pk PRIMARY KEY ( idn,
                                                        idb );

CREATE TABLE cena (
    dat_poc_vaz DATE NOT NULL,
    vred_c      NUMBER(10, 2) DEFAULT 1 NOT NULL,
    idn         INTEGER NOT NULL,
    idtc        INTEGER NOT NULL
);

ALTER TABLE cena ADD CONSTRAINT chk_vred_c CHECK ( vred_c > 0 );

ALTER TABLE cena
    ADD CONSTRAINT cena_pk PRIMARY KEY ( dat_poc_vaz,
                                         idn,
                                         idtc );

CREATE TABLE ima (
    idn   INTEGER NOT NULL,
    idnam INTEGER NOT NULL
);

ALTER TABLE ima ADD CONSTRAINT ima_pk PRIMARY KEY ( idn,
                                                    idnam );

CREATE TABLE kuca (
    idn        INTEGER NOT NULL,
    br_sprat   INTEGER DEFAULT 1 NOT NULL,
    povrs_plac NUMBER(10, 2)
);

ALTER TABLE kuca ADD CONSTRAINT chk_br_sprat CHECK ( br_sprat > 0 );

ALTER TABLE kuca ADD CONSTRAINT chk_povrs_plac CHECK ( povrs_plac > 0 );

ALTER TABLE kuca ADD CONSTRAINT kuca_pk PRIMARY KEY ( idn );

CREATE TABLE lokacija (
    idl     INTEGER NOT NULL,
    grad    VARCHAR2(32 CHAR) NOT NULL,
    drzava  VARCHAR2(32 CHAR) NOT NULL,
    ulica   VARCHAR2(32 CHAR) NOT NULL,
    br_ul   VARCHAR2(32 CHAR) NOT NULL,
    post_br NUMBER(6) NOT NULL
);

ALTER TABLE lokacija ADD CONSTRAINT chk_post_br CHECK ( post_br > 0 );

ALTER TABLE lokacija ADD CONSTRAINT lokacija_pk PRIMARY KEY ( idl );

CREATE TABLE najmodavac (
    idk               INTEGER NOT NULL,
    jmbg_k            NUMBER(13),
    ime_k             VARCHAR2(32 CHAR) NOT NULL,
    prz_k             VARCHAR2(32 CHAR) NOT NULL,
    vrsta_pravnog_sub VARCHAR2(32) NOT NULL,
    tip_k             VARCHAR2(32) NOT NULL
);

ALTER TABLE najmodavac
    ADD CHECK ( vrsta_pravnog_sub IN ( 'FIZICKO_LICE', 'PRAVNO_LICE' ) );

ALTER TABLE najmodavac
    ADD CHECK ( tip_k IN ( 'NAJMODAVAC', 'ZAKUPAC' ) );

ALTER TABLE najmodavac
    ADD CONSTRAINT chk_tip_k_n CHECK ( tip_k = 'NAJMODAVAC' );

ALTER TABLE najmodavac ADD CONSTRAINT najmodavac_pk PRIMARY KEY ( idk );

ALTER TABLE najmodavac ADD CONSTRAINT najmodavac_jmbg_k_un UNIQUE ( jmbg_k );

CREATE TABLE namena (
    idnam     INTEGER NOT NULL,
    naz_tip_n VARCHAR2(32 CHAR) NOT NULL
);

ALTER TABLE namena ADD CONSTRAINT namena_pk PRIMARY KEY ( idnam );

ALTER TABLE namena ADD CONSTRAINT namena_naz_tip_n_un UNIQUE ( naz_tip_n );

CREATE TABLE nekretnina (
    idn              INTEGER NOT NULL,
    povrsina_nek     NUMBER(10, 2) DEFAULT 1 NOT NULL,
    tip_nek          VARCHAR2(32) NOT NULL,
    god_grad         INTEGER,
    br_prost         INTEGER DEFAULT 1 NOT NULL,
    idl              INTEGER NOT NULL,
    idk              INTEGER NOT NULL,
    ida              INTEGER NOT NULL,
    naz_nek          VARCHAR2(32 CHAR),
    dat_potpisivanja DATE NOT NULL,
    provizija        NUMBER(4, 2)
);

ALTER TABLE nekretnina ADD CONSTRAINT chk_povrsina_nek CHECK ( povrsina_nek >= 1 );

ALTER TABLE nekretnina
    ADD CONSTRAINT ch_inh_nekretnina CHECK ( tip_nek IN ( 'kuca', 'poslovni_prostor', 'stan' ) );

ALTER TABLE nekretnina
    ADD CONSTRAINT chk_god_grad CHECK ( length(to_char(god_grad)) = 4 );

ALTER TABLE nekretnina ADD CONSTRAINT chk_br_prost CHECK ( br_prost >= 1 );

ALTER TABLE nekretnina
    ADD CONSTRAINT chk_provizija CHECK ( provizija >= 0
                                         OR provizija BETWEEN 0 AND 50 );

ALTER TABLE nekretnina ADD CONSTRAINT nekretnina_pk PRIMARY KEY ( idn );

ALTER TABLE nekretnina ADD CONSTRAINT nekretnina_naz_nek_un UNIQUE ( naz_nek );

CREATE TABLE oglas (
    dat_o DATE NOT NULL,
    naz_o VARCHAR2(32 CHAR) NOT NULL,
    idn   INTEGER NOT NULL
);

ALTER TABLE oglas ADD CONSTRAINT oglas_pk PRIMARY KEY ( dat_o,
                                                        idn );

CREATE TABLE parking_mesto (
    idpm        INTEGER NOT NULL,
    povrsina_pm NUMBER(6, 2),
    tip_pm      VARCHAR2(10) NOT NULL,
    idn         INTEGER NOT NULL
);

ALTER TABLE parking_mesto ADD CONSTRAINT povrsina_nenula CHECK ( povrsina_pm > 0 );

ALTER TABLE parking_mesto
    ADD CHECK ( tip_pm IN ( 'GARAZA', 'INVALIDSKO', 'STANDARD' ) );

ALTER TABLE parking_mesto ADD CONSTRAINT parking_mesto_pk PRIMARY KEY ( idpm,
                                                                        idn );

CREATE TABLE poslovni_prostor (
    idn INTEGER NOT NULL
);

ALTER TABLE poslovni_prostor ADD CONSTRAINT poslovni_prostor_pk PRIMARY KEY ( idn );

CREATE TABLE pripada_tipu_oglasa (
    idto  INTEGER NOT NULL,
    dat_o DATE NOT NULL,
    idn   INTEGER NOT NULL
);

ALTER TABLE pripada_tipu_oglasa
    ADD CONSTRAINT pripada_tipu_oglasa_pk PRIMARY KEY ( idto,
                                                        dat_o,
                                                        idn );

CREATE TABLE stan (
    idn        INTEGER NOT NULL,
    rbr_sprata INTEGER DEFAULT 0 NOT NULL
);

ALTER TABLE stan ADD CONSTRAINT chk_rbr_sprt CHECK ( rbr_sprata >= 0 );

ALTER TABLE stan ADD CONSTRAINT stan_pk PRIMARY KEY ( idn );

CREATE TABLE tip_cene (
    idtc      INTEGER NOT NULL,
    naz_tip_c VARCHAR2(32 CHAR) NOT NULL
);

ALTER TABLE tip_cene ADD CONSTRAINT tip_cene_pk PRIMARY KEY ( idtc );

ALTER TABLE tip_cene ADD CONSTRAINT tip_cene_naz_tip_c_un UNIQUE ( naz_tip_c );

CREATE TABLE tip_oglasa (
    idto      INTEGER NOT NULL,
    naz_tip_o VARCHAR2(32 CHAR) NOT NULL
);

ALTER TABLE tip_oglasa ADD CONSTRAINT tip_oglasa_pk PRIMARY KEY ( idto );

ALTER TABLE tip_oglasa ADD CONSTRAINT tip_oglasa_naz_tip_o_un UNIQUE ( naz_tip_o );

CREATE TABLE zakup (
    dat_poc_z DATE NOT NULL,
    dat_kr_z  DATE NOT NULL,
    depozit   NUMBER(10, 2) DEFAULT 0,
    cena_z    NUMBER(10, 2) DEFAULT 1 NOT NULL,
    idn       INTEGER NOT NULL,
    idk       INTEGER NOT NULL
);

ALTER TABLE zakup ADD CONSTRAINT chk_dat_kr_z CHECK ( dat_kr_z >= dat_poc_z );

ALTER TABLE zakup ADD CONSTRAINT chk_depozit CHECK ( depozit >= 0 );

ALTER TABLE zakup ADD CONSTRAINT chk_cena_z CHECK ( cena_z >= 1 );

ALTER TABLE zakup ADD CONSTRAINT zakup_pk PRIMARY KEY ( dat_poc_z,
                                                        idn );

CREATE TABLE zakupac (
    idk               INTEGER NOT NULL,
    jmbg_k            NUMBER(13),
    ime_k             VARCHAR2(32 CHAR) NOT NULL,
    prz_k             VARCHAR2(32 CHAR) NOT NULL,
    vrsta_pravnog_sub VARCHAR2(32) NOT NULL,
    tip_k             VARCHAR2(32) NOT NULL
);

ALTER TABLE zakupac
    ADD CHECK ( vrsta_pravnog_sub IN ( 'FIZICKO_LICE', 'PRAVNO_LICE' ) );

ALTER TABLE zakupac
    ADD CHECK ( tip_k IN ( 'NAJMODAVAC', 'ZAKUPAC' ) );

ALTER TABLE zakupac ADD CONSTRAINT zakupac_pk PRIMARY KEY ( idk );

ALTER TABLE zakupac ADD CONSTRAINT zakupac_jmbg_k_un UNIQUE ( jmbg_k );

ALTER TABLE zakupac
    ADD CONSTRAINT chk_tip_k_z CHECK ( tip_k = 'ZAKUPAC' );

ALTER TABLE agent
    ADD CONSTRAINT agent_agent_fk FOREIGN KEY ( ida_nad )
        REFERENCES agent ( ida );

ALTER TABLE bazen
    ADD CONSTRAINT bazen_kuca_fk FOREIGN KEY ( idn )
        REFERENCES kuca ( idn );

ALTER TABLE cena
    ADD CONSTRAINT cena_nekretnina_fk FOREIGN KEY ( idn )
        REFERENCES nekretnina ( idn );

ALTER TABLE cena
    ADD CONSTRAINT cena_tip_cene_fk FOREIGN KEY ( idtc )
        REFERENCES tip_cene ( idtc );

ALTER TABLE ima
    ADD CONSTRAINT ima_namena_fk FOREIGN KEY ( idnam )
        REFERENCES namena ( idnam );

ALTER TABLE ima
    ADD CONSTRAINT ima_poslovni_prostor_fk FOREIGN KEY ( idn )
        REFERENCES poslovni_prostor ( idn );

ALTER TABLE kuca
    ADD CONSTRAINT kuca_nekretnina_fk FOREIGN KEY ( idn )
        REFERENCES nekretnina ( idn );

ALTER TABLE nekretnina
    ADD CONSTRAINT nekretnina_agent_fk FOREIGN KEY ( ida )
        REFERENCES agent ( ida );

ALTER TABLE nekretnina
    ADD CONSTRAINT nekretnina_lokacija_fk FOREIGN KEY ( idl )
        REFERENCES lokacija ( idl );

ALTER TABLE nekretnina
    ADD CONSTRAINT nekretnina_najmodavac_fk FOREIGN KEY ( idk )
        REFERENCES najmodavac ( idk );

ALTER TABLE oglas
    ADD CONSTRAINT oglas_nekretnina_fk FOREIGN KEY ( idn )
        REFERENCES nekretnina ( idn );

ALTER TABLE parking_mesto
    ADD CONSTRAINT parking_mesto_nekretnina_fk FOREIGN KEY ( idn )
        REFERENCES nekretnina ( idn );

ALTER TABLE poslovni_prostor
    ADD CONSTRAINT poslovni_prostor_nekretnina_fk FOREIGN KEY ( idn )
        REFERENCES nekretnina ( idn );

ALTER TABLE pripada_tipu_oglasa
    ADD CONSTRAINT pripada_tipu_o_o_fk FOREIGN KEY ( dat_o,
                                                     idn )
        REFERENCES oglas ( dat_o,
                           idn );

ALTER TABLE pripada_tipu_oglasa
    ADD CONSTRAINT pripada_tipu_o_tip_o_fk FOREIGN KEY ( idto )
        REFERENCES tip_oglasa ( idto );

ALTER TABLE stan
    ADD CONSTRAINT stan_nekretnina_fk FOREIGN KEY ( idn )
        REFERENCES nekretnina ( idn );

ALTER TABLE zakup
    ADD CONSTRAINT zakup_nekretnina_fk FOREIGN KEY ( idn )
        REFERENCES nekretnina ( idn );

ALTER TABLE zakup
    ADD CONSTRAINT zakup_zakupac_fk FOREIGN KEY ( idk )
        REFERENCES zakupac ( idk );

CREATE OR REPLACE TRIGGER arc_fkarc_1_kuca BEFORE
    INSERT OR UPDATE OF idn ON kuca
    FOR EACH ROW
DECLARE
    d VARCHAR2(32);
BEGIN
    SELECT
        a.tip_nek
    INTO d
    FROM
        nekretnina a
    WHERE
        a.idn = :new.idn;

    IF ( d IS NULL OR d <> 'kuca' ) THEN
        raise_application_error(-20223, 'FK kuca_nekretnina_FK in Table kuca violates Arc constraint on Table nekretnina - discriminator column tip_nek doesn''t have value ''kuca'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_poslovni_prostor BEFORE
    INSERT OR UPDATE OF idn ON poslovni_prostor
    FOR EACH ROW
DECLARE
    d VARCHAR2(32);
BEGIN
    SELECT
        a.tip_nek
    INTO d
    FROM
        nekretnina a
    WHERE
        a.idn = :new.idn;

    IF ( d IS NULL OR d <> 'poslovni_prostor' ) THEN
        raise_application_error(-20223, 'FK poslovni_prostor_nekretnina_FK in Table poslovni_prostor violates Arc constraint on Table nekretnina - discriminator column tip_nek doesn''t have value ''poslovni_prostor'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_stan BEFORE
    INSERT OR UPDATE OF idn ON stan
    FOR EACH ROW
DECLARE
    d VARCHAR2(32);
BEGIN
    SELECT
        a.tip_nek
    INTO d
    FROM
        nekretnina a
    WHERE
        a.idn = :new.idn;

    IF ( d IS NULL OR d <> 'stan' ) THEN
        raise_application_error(-20223, 'FK stan_nekretnina_FK in Table stan violates Arc constraint on Table nekretnina - discriminator column tip_nek doesn''t have value ''stan'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            18
-- CREATE INDEX                             0
-- ALTER TABLE                             68
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
